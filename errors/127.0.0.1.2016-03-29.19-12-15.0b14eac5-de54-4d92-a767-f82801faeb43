(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> invalid literal for long() with base 10: '|21|21|'"
p3
sS'layer'
p4
S'/home/satyam/itws/web2py/applications/COOKRE/controllers/default.py'
p5
sS'code'
p6
S'def index():\n    if auth.user: redirect(URL(\'recipes?id=0\'))\n    #print db.auth_group[auth.user_id].role\n    return locals()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n@auth.requires_membership(role=\'user_3\')\ndef manage():\n    tablename = request.args(0)\n    if tablename: \n        grid = SQLFORM.smartgrid(db[tablename])\n    else:\n        grid = UL(*[LI(A(t,_href=URL(args=t))) for t in db.tables])\n    return locals()\ndef user():\n    return dict(form=auth())\ndef like():\n   try:\n       id1=request.vars.id[0]\n       print request.vars.id[0]\n       form =id1\n       db.likes.insert(username=auth.user_id,rec=form)\n       new_votes=db.recipe[form].nolike+1\n       print new_votes\n       db.recipe[form].update_record(nolike=new_votes)\n       return str(new_votes)\n   except:\n       return str("#you already like this")\n\ndef call():\n    session.forget()\n    return service()\n\n# our home page, will show our posts and posts by friends\n@auth.requires_login()\ndef home():\n    form=SQLFORM(db.recipe,fields=[\'title\',\n                               \'ingredients\',\'directions\',\'Country\',\'notes\',\'pictures\',\'type\'])\n    username=db.auth_user\n    if form.accepts(request,session):\n        redirect(URL(\'recipes?id=0\'))\n    return dict(form=form,username=username)\n\n# our wall, will show our profile and our own posts\n@auth.requires_login()\ndef recipes():\n    id=int(request.vars.id)\n    records=db(db.recipe).select(orderby=db.recipe.title, limitby=(id*10,id*10+10))\n    if id>0:\n        back=id-1\n    else:\n        back=id\n    #form=SQLFORM(db.recipe,fields=[\'category\'])\n    return dict(records=records,k=id+1,back=back)\n@auth.requires_login()\ndef show():\n    id=request.vars.id\n    recipes=db(db.recipe.id==id).select()\n    if not len(recipes): redirect(URL(\'recipes\'))\n    if db.recipe[id].user_ref==auth.user_id:\n        recipeForm = SQLFORM(db.recipe, recipes[0],fields=[\'title\',\n                               \'ingredients\',\'directions\',\'Country\',\'notes\',\'pictures\'], deletable=True, showid=False)\n\n    else:\n        recipeForm="Cann\'t be edited"\n    return dict(recipe=recipes[0],recipeForm=recipeForm)\n@auth.requires_login()\ndef wall():\n    records=db(db.recipe.user_ref == auth.user_id).select(db.recipe.title,db.recipe.Country,db.recipe.creationTime,db.recipe.pictures,db.recipe.type)\n    return dict(records=records)\n# a page for searching friends and requesting friendship\n@auth.requires_login()\ndef search():\n    FOOD="VEG OR NON-VEG"\n    form1 = FORM(INPUT(_type="text", _name="var"), _action="fsearch")\n    return locals() \ndef fsearch():\n    var=str(request.vars["var"])\n    records=db(db.recipe.type==var).select()\n    return locals()\n\nresponse._vars=response._caller(show)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/satyam/itws/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/satyam/itws/web2py/applications/COOKRE/controllers/default.py", line 86, in <module>\n  File "/home/satyam/itws/web2py/gluon/globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/satyam/itws/web2py/gluon/tools.py", line 4236, in f\n    return action(*a, **b)\n  File "/home/satyam/itws/web2py/applications/COOKRE/controllers/default.py", line 62, in show\n    recipes=db(db.recipe.id==id).select()\n  File "/home/satyam/itws/web2py/gluon/packages/dal/pydal/objects.py", line 2025, in select\n    return adapter.select(self.query,fields,attributes)\n  File "/home/satyam/itws/web2py/gluon/packages/dal/pydal/adapters/sqlite.py", line 124, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "/home/satyam/itws/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1280, in select\n    sql = self._select(query, fields, attributes)\n  File "/home/satyam/itws/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1167, in _select\n    sql_w = \' WHERE \' + self.expand(query) if query else \'\'\n  File "/home/satyam/itws/web2py/gluon/packages/dal/pydal/adapters/base.py", line 952, in expand\n    rv = op(first, second, **optional_args)\n  File "/home/satyam/itws/web2py/gluon/packages/dal/pydal/adapters/base.py", line 846, in EQ\n    self.expand(second, first.type))\n  File "/home/satyam/itws/web2py/gluon/packages/dal/pydal/adapters/base.py", line 962, in expand\n    rv = self.represent(expression, field_type)\n  File "/home/satyam/itws/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1432, in represent\n    return str(long(obj))\nValueError: invalid literal for long() with base 10: \'|21|21|\'\n'
p11
s.